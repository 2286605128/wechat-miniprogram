/*
 _________
|   布局   |\
| ~~~~~~~ |_\
|  flex   |
| ~~~~~~~ |
| ~~~~~~~ |
|_________|
*/
.block {
    display: block;
}
.none {
    display: none;
}
.inline-block {
    display: inline-block;
}
.flex {
    display: flex;
}
.align-center {
    text-align: center;
    align-items: center;
}

/* 项目位于容器的开头 */
.justify-start {
    justify-content: flex-start;
}

/* 项目位于容器的结尾 */
.justify-end {
    justify-content: flex-end;
}

/* 项目位于容器的中心 */
.justify-center {
    justify-content: center;
}

/* 项目位于各行之间留有空白的容器内 */
.justify-between {
    justify-content: space-between;
}

/* 项目位于各行之前、之间、之后都留有空白的容器内 */
.justify-around {
    justify-content: space-around;
}

.align-start {
    align-items: flex-start;
}

.align-end {
    align-items: flex-end;
}

.align-center {
    align-items: center;
}

.align-stretch {
    align-items: stretch;
}

.self-start {
    align-self: flex-start;
}

.self-center {
    align-self: flex-center;
}

.self-end {
    align-self: flex-end;
}

.self-stretch {
    align-self: stretch;
}

.flex-direction-row {
    flex-direction: row;
}

.flex-direction-row-reverse {
    flex-direction: row-reverse;
}

.flex-direction-column {
    flex-direction: column;
}

.flex-direction-column-reverse {
    flex-direction: column-reverse;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-xs {
    flex-basis: 20%;
}

.flex-sm {
    flex-basis: 40%;
}

.flex-hf {
    flex-basis: 50%;
}

.flex-lg {
    flex-basis: 60%;
}

.flex-xl {
    flex-basis: 80%;
}

.flex-xxl {
    flex-basis: 100%;
}

.flex-once {
    flex: 1;
}

.flex-twice {
    flex: 2;
}

.flex-treble {
    flex: 3;
}

.flex-four {
    flex: 4;
}

.grid {
    display: grid;
    &.col-1 {
        grid-template-columns: 100%;
        grid-template-rows: auto;
    }
    &.col-2 {
        grid-template-columns: 50% 50%;
        grid-template-rows: auto;
    }
    &.col-3 {
        grid-template-columns: 33.33% 33.33% 33.33%;
        grid-template-rows: auto;
    }
    &.col-4 {
        grid-template-columns: 25% 25% 25% 25%;
        grid-template-rows: auto;
    }
    &.col-5 {
        grid-template-columns: 20% 20% 20% 20% 20%;
        grid-template-rows: auto;
    }
}

.relative {
    position: relative;
}

.absolute {
    position: absolute;
}

.fixed {
    position: fixed;
}

.static {
    position: static;
}

.overflow-hidden {
    overflow: hidden;
}

/* margin-left */
.marginLeft(100);
.marginLeft(@ml, @i: 0) when (@i =< @ml) {
    .ml-@{i} {
        margin-left: 0rpx + @i;
    }
    .marginLeft(@ml, (@i + 2));
}
/* margin-right */
.marginRight(100);
.marginRight(@mr, @i: 0) when (@i =< @mr) {
    .mr-@{i} {
        margin-right: 0rpx + @i;
    }
    .marginRight(@mr, (@i + 2));
}
/* margin-top */
.marginTop(100);
.marginTop(@mt, @i: 0) when (@i =< @mt) {
    .mt-@{i} {
        margin-top: 0rpx + @i;
    }
    .marginTop(@mt, (@i + 2));
}
/* margin-botoom */
.marginBotoom(100);
.marginBotoom(@mb, @i: 0) when (@i =< @mb) {
    .mb-@{i} {
        margin-bottom: 0rpx + @i;
    }
    .marginBotoom(@mb, (@i + 2));
}

.margin-0 {
    margin: 0;
}
.margin-xs {
    margin: 10rpx;
}

.margin-sm {
    margin: 20rpx;
}

.margin-sub {
    margin: 30rpx;
}

.margin-lg {
    margin: 40rpx;
}

.margin-xl {
    margin: 50rpx;
}

/* padding-left */
.paddingLeft(100);
.paddingLeft(@ml, @i: 0) when (@i =< @ml) {
    .pl-@{i} {
        padding-left: 0rpx + @i;
    }
    .paddingLeft(@ml, (@i + 2));
}
/* padding-right */
.paddingRight(100);
.paddingRight(@mr, @i: 0) when (@i =< @mr) {
    .pr-@{i} {
        padding-right: 0rpx + @i;
    }
    .paddingRight(@mr, (@i + 2));
}
/* padding-top */
.paddingTop(100);
.paddingTop(@mt, @i: 0) when (@i =< @mt) {
    .pt-@{i} {
        padding-top: 0rpx + @i;
    }
    .paddingTop(@mt, (@i + 2));
}
/* padding-botoom */
.paddingBotoom(100);
.paddingBotoom(@mb, @i: 0) when (@i =< @mb) {
    .pb-@{i} {
        padding-bottom: 0rpx + @i;
    }
    .paddingBotoom(@mb, (@i + 2));
}

.padding-0 {
    padding: 0;
}
.padding-xs {
    padding: 10rpx;
}

.padding-sm {
    padding: 20rpx;
}

.padding-sub {
    padding: 30rpx;
}

.padding-lg {
    padding: 40rpx;
}

.padding-xl {
    padding: 50rpx;
}

.solid,
.solid-top,
.solid-right,
.solid-bottom,
.solid-left,
.dashed,
.dashed-top,
.dashed-right,
.dashed-bottom,
.dashed-left {
    position: relative;
}
.solid::after,
.solid-top::after,
.solid-right::after,
.solid-bottom::after,
.solid-left::after,
.dashed::after,
.dashed-top::after,
.dashed-right::after,
.dashed-bottom::after,
.dashed-left::after {
    content: '';
    width: 200%;
    height: 200%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: inherit;
    transform: scale(0.5);
    transform-origin: 0 0;
    pointer-events: none;
    box-sizing: border-box;
}
/* 实线 */
.solid::after {
    border: 1rpx solid rgba(0, 0, 0, .3);
}

.solid-top::after {
    border-top: 1rpx solid rgba(0, 0, 0, .3);
}

.solid-right::after {
    border-right: 1rpx solid rgba(0, 0, 0, .3);
}

.solid-bottom::after {
    border-bottom: 1rpx solid rgba(0, 0, 0, .3);
}

.solid-left::after {
    border-left: 1rpx solid rgba(0, 0, 0, .3);
}

/* 虚线 */
/* -- 虚线 -- */

.dashed::after {
    border: 1rpx dashed #ddd;
}

.dashed-top::after {
    border-top: 1rpx dashed #ddd;
}

.dashed-right::after {
    border-right: 1rpx dashed #ddd;
}

.dashed-bottom::after {
    border-bottom: 1rpx dashed #ddd;
}

.dashed-left::after {
    border-left: 1rpx dashed #ddd;
}

.round {
    border-radius: 50%;
}

/* padding-top */
.radius(100);
.radius(@rd, @i: 2) when (@i =< @rd) {
    .radius-@{i} {
        border-radius: 0rpx + @i;
    }
    .radius(@rd, (@i + 2));
}
